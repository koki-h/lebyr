########################################
#                                      #
#              DEMO の実行             #
#                                      #
########################################

WARNING:
Twitter bot は停止して久しく、Twitter の仕様変更 (OAuth 導入等) に対応していない



プログラムは以下の二つのディレクトリに配置されている:
* ~/research/lebyr/server
* ~/public_html/egnee

Apache の設定上、実行ファイルを symbolic link にすることができないからである。

ホスト名やポート番号などは設定ファイルに分離すべきだが、面倒なのでやっていない。

語彙獲得のプログラムは、そのままでは CGI として使えない。
CGI は利用者の要求に応じて起動され、返答を返すと終了するからである。
従って、DEMO では独立したサーバを継続的に動かし、CGI がさらに要求を発行する仕組みとなっている。
また、同じ仕組みを使って twitter の bot も運用できるようになっている。

サーバは内部で親と子に分かれており、プロセス間通信を行なう。
語彙獲得の処理に時間がかかったとしても、要求を迅速に受け入れるためである。
親が利用者の要求を受け付け、子が本処理を行なう。
親は利用者の要求に対して、ID を発行するだけで、利用者に処理の終了を通知しない。
かわりに、利用者が定期的に処理が終了したかを問い合わせる。
CGI ではこの処理は Ajax により実現している。

プロセス間通信では、パイプのバッファを queue として用いている。
この手法は、thread を使わずに queue を実現できるという利点がある。
一方、欠点は、パイプのバッファサイズに制約を受けることである。
おそらく要求の規模に対してスケールしない。

サーバを再起動した際には過去の記録を読み直させたい。
そこで batch.pl を用いる。
まず ~/public_html/egnee/clean.sh によってログを掃除し、
ログから ~/public_html/egnee/data/batch を生成する。
次に batch.pl を起動すると、データが一括してサーバに送られる。
